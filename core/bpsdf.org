#+TITLE: BTPRNT + SDFVM
* Overview
Use SDFVM to render 1-bit shapes to a BTPRNT region.
#+NAME: bpsdf.c
#+BEGIN_SRC c :tangle core/bpsdf.c
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

#include "sndkit/lil/lil.h"
#include "btprnt/btprnt.h"

#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif
#include "mathc/mathc.h"

#include "sdf2d/sdf.h"

#define SDF2D_SDFVM_PRIV
#include "sdf2d/sdfvm.h"

#define US_MAXTHREADS 8

<<static_funcdefs>>
<<funcs>>
#+END_SRC

#+NAME: bpsdf.h
#+BEGIN_SRC c :tangle core/bpsdf.h
#ifndef BPSDF_H
#define BPSDF_H
#ifdef BPSDF_PRIV

#endif
<<funcdefs>>
#endif
#+END_SRC
* Creating an Instance of SDFVM
Not only does this instantiate SDFVM, but components for
a multi-threaded rendering pipeline. This consists of a
threadpool, with each threadpool getting their own instance
of SDFVM. A set of registers is allocated to be shared
amongst all the instances (this is intended to be used for
read-only purposes).
** C function
** LIL function
#+NAME: static_funcdefs
#+BEGIN_SRC c
static lil_value_t l_sdfvmnew(lil_t lil,
                              size_t argc,
                              lil_value_t *argv);
#+END_SRC
#+NAME: funcs
#+BEGIN_SRC c
static lil_value_t l_sdfvmnew(lil_t lil,
                              size_t argc,
                              lil_value_t *argv)
{
    /* TODO: implement */
    return NULL;
}
#+END_SRC
* Core Rendering Callback
* The bpsdf command
The =bpsdf= command takes in the follow arguments:
an instance of a btprnt register, an instance
of SDFVM, and a mnolth buffer containing
the SDF shader program. bpsdf packages these together
and sends them through the rendering pipeline.
** C function
** LIL function
#+NAME: static_funcdefs
#+BEGIN_SRC c
static lil_value_t l_bpsdf(lil_t lil,
                           size_t argc,
                           lil_value_t *argv);
#+END_SRC
#+NAME: funcs
#+BEGIN_SRC c
static lil_value_t l_bpsdf(lil_t lil,
                           size_t argc,
                           lil_value_t *argv)
{
    /* TODO: implement */
    return NULL;
}
#+END_SRC
* LIL Loader
Loads the =bpsdf= and =sdfvmnew= words.

#+NAME: funcdefs
#+BEGIN_SRC c
void lil_load_bpsdf(lil_t lil);
#+END_SRC

#+NAME: funcs
#+BEGIN_SRC c
void lil_load_bpsdf(lil_t lil)
{
    lil_register(lil, "sdfvmnew", l_sdfvmnew);
    lil_register(lil, "bpsdf", l_bpsdf);
}
#+END_SRC
